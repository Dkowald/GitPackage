<Project>
	<PropertyGroup>
		<!--Sample repository for tests-->
		<SampleRepo>$(MSBuildProjectDirectory)/TestData/SampleRepo</SampleRepo>
	</PropertyGroup>

	<Target Name="TestSetup">

		<Message Text='(Re)Creating Sample Repository'/>
		<Exec Command='powershell.exe â€“NonInteractive -command "&amp; ./TestData/SampleRepo.Create.ps1 $(SampleRepo)"'
		      StandardOutputImportance='low'
		      StandardErrorImportance='low'
		      ConsoleToMSBuild='true' />

		<Message Text="Deleting cached sample repositories"/>
		<ItemGroup>
			<SampleRepo Include="$(GitRepoCache)/SampleUnversioned" />
			<SampleRepo Include="$(GitRepoCache)/SampleTaged" />
		</ItemGroup>
		<RemoveDir Directories="@(SampleRepo)" />

		<Message Text="Deleting git package files"/>
		<ItemGroup>
			<Folders Include="$([System.IO.Directory]::GetDirectories(&quot;./gist&quot;))" />
		</ItemGroup>
		<ItemGroup>
			<VerFiles Include="gist/*.ver" />
		</ItemGroup>
		<Delete Files="@(VerFiles)"/>
		<RemoveDir Directories="@(Folders)" />
	</Target>

	<Target Name="SampleAttached">
		<ItemGroup>
			<GitPackage Include="SampleAttached" Uri="$(SampleRepo)" Attach="master" />
		</ItemGroup>
	</Target>
	<Target Name="SampleAttached2">
		<ItemGroup>
			<GitPackage Include="SampleAttached2" Uri="$(SampleRepo)" Attach="master" />
		</ItemGroup>
	</Target>
	<Target Name="SampleAttachedAlt">
		<ItemGroup>
			<GitPackage Include="SampleAttachedAlt" Uri="$(SampleRepo)" Attach="AltBranch" />
		</ItemGroup>
	</Target>
	<Target Name="SampleUnversioned">
		<ItemGroup>
			<GitPackage Include="SampleUnversioned" Uri="$(SampleRepo)" />
		</ItemGroup>
	</Target>
	<Target Name="SampleV1">
		<ItemGroup>
			<GitPackage Include="SampleTaged" Version='1' Uri="$(SampleRepo)"  />
		</ItemGroup>
	</Target>
	<Target Name="SampleV2">
		<ItemGroup>
			<GitPackage Include="SampleTaged" Version='2' Uri="$(SampleRepo)"  />
		</ItemGroup>
	</Target>
	<Target Name="SampleV5">
		<ItemGroup>
			<GitPackage Include="SampleTaged" Version='5' Uri="$(SampleRepo)"  />
		</ItemGroup>
	</Target>
	<Target Name="SampleInvalid">
		<ItemGroup>
			<GitPackage Include="SampleTaged" Version='inValidVersion' Uri="$(SampleRepo)" />
		</ItemGroup>
	</Target>

	<Target Name="Test1" DependsOnTargets="TestSetup">

		<Message Importance="High" Text="Attached package is cloned locally" />

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=1"
		         Targets="SampleAttached;GitPackRestore" />

		<Error Condition="!Exists('gist/SampleAttached.ver')" Text="Expected version file"  />
		<Error Condition="!Exists('gist/SampleAttached/4')" Text="Expected check-out latest on master"/>
		<Error Condition="!Exists('gist/SampleAttached/.git/')" Text="Expected repository clone"/>
		
		<Message Importance="High" Text="PASS"  />
	</Target>

	<Target Name="Test1-1" DependsOnTargets="TestSetup">

		<Message Importance="High" Text="Remove attached package" />

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=1"
		         Targets="SampleAttached;GitPackRestore" />

		<Error Condition="!Exists('gist/SampleAttached.ver')" Text="Expected version file"  />
		<Error Condition="!Exists('gist/SampleAttached/.git/')" Text="Expected local repository"/>

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=2"
		         Targets="GitPackRestore" />

		<Error Condition="Exists('gist/SampleAttached.ver')" Text="Expected no version file"  />
		<Error Condition="Exists('gist/SampleAttached/')" Text="Expected no repository folder"/>

		<Message Importance="High" Text="PASS"  />
	</Target>

	<Target Name="Test1-2" DependsOnTargets="TestSetup">

		<Message Importance="High" Text="Attach package using alternate branch"/>

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=1"
		         Targets="SampleAttachedAlt;GitPackRestore" />

		<Error Condition="!Exists('gist/SampleAttachedAlt.ver')" Text="Expected version file"  />
		<Error Condition="!Exists('gist/SampleAttachedAlt/2.6')" Text="Expected check-out file"/>
		<Error Condition="!Exists('gist/SampleAttachedAlt/.git/')" Text="Expected repository folder"/>
		<Message Importance="High" Text="PASS" />
	</Target>

	<Target Name="Test1-3" DependsOnTargets="TestSetup">

		<Message Importance="High" Text="Attached package will NOT refresh existing work tree folder" />

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=1"
		         Targets="SampleAttached;GitPackRestore" />
		
		<Delete Files="gist/SampleAttached.ver"/>
		<RemoveDir Directories="gist/SampleAttached/.git/"/>

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=2"
		         Targets="SampleAttached;GitPackRestore" />
		
		<Error Condition="!Exists('gist/SampleAttached.ver')" Text="Expected version file re-created"  />
		<Error Condition="Exists('gist/SampleAttached/.git/')" Text="Expected repository folder not restored"/>
		<Message Importance="High" Text="PASS"  />

	</Target>

	<Target Name="Test2" DependsOnTargets="TestSetup">
		
		<Message Importance="High" Text="Add and remove un-versioned package"/>

		<Error Condition="Exists('$(GitRepoCache)/SampleUnversioned/')" Text="Expected NO cached clone"  />

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=1"
		         Targets="SampleUnversioned;GitPackRestore" />

		<Error Condition="!Exists('$(GitRepoCache)/SampleUnversioned/')" Text="Expected cached clone"  />
		<Error Condition="!Exists('gist/SampleUnversioned.ver')" Text="Expected version file"  />
		<Error Condition="!Exists('gist/SampleUnversioned/4')" Text="Expected check-out file"/>

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=2"
		         Targets="GitPackRestore" />

		<Error Condition="Exists('gist/SampleUnversioned.ver')" Text="Expected no version file"  />
		<Error Condition="Exists('gist/SampleUnversioned/')" Text="Expected no work-tree folder"/>

		<Message Importance="High" Text="PASS"/>


	</Target>

	<Target Name="Test2-1" DependsOnTargets="TestSetup">
		
		<Message Importance="High" Text="un-versioned package update with refresh build target"/>

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=1"
		         Targets="SampleAttached;SampleUnversioned;GitPackRestore" />

		<Error Condition="!Exists('gist/SampleUnversioned/4')" Text="Expected check-out file"/>
		
		<CallTarget Targets="_sampleAttachedUpdate4To5" />
		
		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=2"
		         Targets="SampleAttached;SampleUnversioned;GitPackRefresh" />

		<Error Condition="!Exists('gist/SampleUnversioned/5')" Text="Expected check-out file: 5"/>
		<Message Importance="High" Text="PASS"  />
	</Target>

	<Target Name="Test2-2" DependsOnTargets="TestSetup">

		<Message Importance="High" Text="Auto refresh un-versioned package"/>

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=1"
		         Targets="SampleAttached;SampleUnversioned;GitPackRestore" />

		<Error Condition="!Exists('gist/SampleUnversioned/4')" Text="Expected check-out file"/>
		
		<CallTarget Targets="_sampleAttachedUpdate4To5" />

		<Delete Files="gist/SampleUnversioned.ver"/>

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=2"
		         Targets="SampleAttached;SampleUnversioned;GitPackRefresh" />

		<Error Condition="!Exists('gist/SampleUnversioned/5')" Text="Expected check-out file: 5"/>
		<Message Importance="High" Text="PASS"/>

	</Target>

	<Target Name="Test3" DependsOnTargets="TestSetup">

		<Message Importance="High" Text="Versioned package update" />

		<Error Condition="Exists('$(GitRepoCache)/SampleTaged/')" Text="Expected NO cached clone"  />

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=1"
		         Targets="SampleV1;GitPackRestore" />

		<Error Condition="!Exists('$(GitRepoCache)/SampleTaged/')" Text="Expected cached clone"  />
		<Error Condition="!Exists('gist/SampleTaged/1')" Text="Expected file: 1"  />

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=2"
		         Targets="SampleV2;GitPackRestore" />

		<Error Condition="!Exists('gist/SampleTaged/2')" Text="Expected file: 2"  />

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=3"
		         Targets="GitPackRestore" />

		<Error Condition="Exists('gist/SampleTaged.ver')" Text="Expected no version file"  />
		<Error Condition="Exists('gist/SampleTaged/')" Text="Expected no work-tree folder"  />

		<Message Importance="High" Text="PASS" />
	</Target>

	<Target Name="Test3-1" DependsOnTargets="TestSetup">

		<Message Importance="High" Text="Versioned package triggers fetch if needed"/>

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=1"
		         Targets="SampleAttached;SampleV1;GitPackRestore" />

		<Error Condition="!Exists('gist/SampleTaged/1')" Text="Expected file: 1"  />

		<CallTarget Targets="_sampleAttachedUpdate4To5" />

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=2"
		         Targets="SampleV5;GitPackRestore" />

		<Error Condition="!Exists('gist/SampleTaged/5')" Text="Expected file: 5"  />

		<Message Importance="High" Text="PASS"/>

	</Target>

	<Target Name="Test3-2" DependsOnTargets="TestSetup">

		<Message Importance="High" Text="Versioned package fails build if no version found"/>

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=1"
		         Targets="SampleV1;GitPackRestore" />

		<Error Condition="!Exists('gist/SampleTaged/1')" Text="Expected file: 1"  />

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=2"
		         Targets="SampleInvalid;GitPackRestore" ContinueOnError="true" />

		<Error Text="Expected build fail" Condition=" '$(MSBuildLastTaskResult)' == 'true'"/>

		<Message Importance="High" Text="PASS (expected build fail)"/>

	</Target>

	<Target Name="Test4" DependsOnTargets="TestSetup">

		<Message Importance="High" Text="Checkout in different projects"/>

		<PropertyGroup>
			<Other>./TestData/OtherTestProject</Other>
			<OtherProject>$(Other)/OtherTestProject.csproj</OtherProject>
		</PropertyGroup>

		<MSBuild Projects ="$(OtherProject)" Properties="Run=1"
		         Targets="GistClean" />
		
		<Error Condition="Exists('$(Other)/gist')" Text="Expected clean folder in other project"  /> 

		<MSBuild Projects ="$(OtherProject)" Properties="Run=2"
		         Targets="GitPackRestore" />

		<MSBuild Projects ="$(MSBuildProjectFullPath)" Properties="Run=3"
		         Targets="SampleUnversioned;SampleV1;GitPackRestore" />
		
		<Error Condition="!Exists('gist/SampleUnversioned/')" Text="Expected folder for un-versioned"  /> 
		<Error Condition="!Exists('gist/SampleTaged/1')" Text="Expected file: 1"  />

		<Error Condition="!Exists('$(Other)/gist/SampleUnversioned/')" Text="Expected folder for un-versioned"  />
		<Error Condition="!Exists('$(Other)/gist/SampleTaged/1')" Text="Expected file: 1"  />

		<Message Importance="High" Text="PASS" />
	</Target>

	<Target Name="_sampleAttachedUpdate4To5">
		<Delete Files="gist/SampleAttached/4"/>
		<Touch Files="gist/SampleAttached/5" AlwaysCreate="true"/>
		<Exec Command="git stage -A" WorkingDirectory="gist/SampleAttached"
		      StandardOutputImportance='low' StandardErrorImportance='low'/>
		<Exec Command="git commit -m 5" WorkingDirectory="gist/SampleAttached"
		      StandardOutputImportance='low' StandardErrorImportance='low'/>
		<Exec Command="git push" WorkingDirectory="gist/SampleAttached"
		      StandardOutputImportance='low' StandardErrorImportance='low'/>

		<Exec Command="git tag 5" WorkingDirectory="gist/SampleAttached"
		      StandardOutputImportance='low' StandardErrorImportance='low'/>
		<Exec Command="git push --tags" WorkingDirectory="gist/SampleAttached"
		      StandardOutputImportance='low' StandardErrorImportance='low'/>
	</Target>

	<Target Name="_sampleAttachedUpdate5To6">
		<Delete Files="gist/SampleAttached/5"/>
		<Touch Files="gist/SampleAttached/6" AlwaysCreate="true"/>
		<Exec Command="git stage -A" WorkingDirectory="gist/SampleAttached" 
		      StandardOutputImportance='low' StandardErrorImportance='low'/>
		<Exec Command="git commit -m 6" WorkingDirectory="gist/SampleAttached"
		      StandardOutputImportance='low' StandardErrorImportance='low'/>
		<Exec Command="git push" WorkingDirectory="gist/SampleAttached"
		      StandardOutputImportance='low' StandardErrorImportance='low'/>
	</Target>

</Project>